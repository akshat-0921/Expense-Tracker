{"ast":null,"code":"var _jsxFileName = \"F:\\\\Expense Tracker\\\\client\\\\src\\\\components\\\\TransactionList.js\",\n  _s = $RefreshSig$();\n// client/src/components/TransactionList.js\nimport React, { useState, useEffect } from 'react';\nimport axios from '../axios'; // Import your axios instance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionList = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const res = await axios.get('/transactions'); // Use the axios instance\n        setTransactions(res.data);\n      } catch (error) {\n        console.error('Error fetching transactions:', error);\n        setError('Failed to fetch transactions.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTransactions();\n  }, []);\n  const handleDelete = async id => {\n    if (window.confirm('Are you sure you want to delete this transaction?')) {\n      try {\n        await axios.delete(`/transactions/:${id}`); // Make sure this matches your API route\n        setTransactions(transactions.filter(transaction => transaction._id !== id));\n        alert('Transaction deleted successfully.');\n      } catch (error) {\n        console.error('Error deleting transaction:', error);\n        alert('Failed to delete transaction.');\n      }\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading transactions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [transaction.title, \": $\", transaction.amount, \" (\", transaction.type, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(transaction._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, transaction._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(TransactionList, \"5jbk8HdePT8SHyzZX04TAttKX7Q=\");\n_c = TransactionList;\nexport default TransactionList;\nvar _c;\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TransactionList","_s","transactions","setTransactions","loading","setLoading","error","setError","fetchTransactions","res","get","data","console","handleDelete","id","window","confirm","delete","filter","transaction","_id","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","amount","type","onClick","_c","$RefreshReg$"],"sources":["F:/Expense Tracker/client/src/components/TransactionList.js"],"sourcesContent":["// client/src/components/TransactionList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from '../axios'; // Import your axios instance\r\n\r\nconst TransactionList = () => {\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchTransactions = async () => {\r\n            try {\r\n                const res = await axios.get('/transactions'); // Use the axios instance\r\n                setTransactions(res.data);\r\n            } catch (error) {\r\n                console.error('Error fetching transactions:', error);\r\n                setError('Failed to fetch transactions.');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchTransactions();\r\n    }, []);\r\n\r\n    const handleDelete = async (id) => {\r\n      if (window.confirm('Are you sure you want to delete this transaction?')) {\r\n          try {\r\n              await axios.delete(`/transactions/:${id}`); // Make sure this matches your API route\r\n              setTransactions(transactions.filter((transaction) => transaction._id !== id));\r\n              alert('Transaction deleted successfully.');\r\n          } catch (error) {\r\n              console.error('Error deleting transaction:', error);\r\n              alert('Failed to delete transaction.');\r\n          }\r\n      }\r\n  };\r\n  \r\n\r\n    if (loading) return <p>Loading transactions...</p>;\r\n    if (error) return <p>{error}</p>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Transactions</h2>\r\n            <ul>\r\n                {transactions.map((transaction) => (\r\n                    <li key={transaction._id}>\r\n                        {transaction.title}: ${transaction.amount} ({transaction.type})\r\n                        <button onClick={() => handleDelete(transaction._id)}>Delete</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransactionList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}